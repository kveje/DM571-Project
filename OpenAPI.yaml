openapi: 3.0.3
info:
  title: Shopping Basket
  description: This is an awesome app for a shopping basket
  contact:
    email: kasja20@student.sdu.dk
    name: Tan Nhat Lee, Nikolaj Dall, Emil Czepluch, Kasper Veje Jakobsen
  version: 1.0.0
tags:
  - name: Inventory
  - name: Shopping Basket

paths:
  /inventory:
    get:
      tags:
        - Inventory
      summary: Fetch inventory status
      description: Fetch a list of products with stock levels
      security:
        - apiKey: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllItems'
                      
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot

  /basket/create:
    post:
      tags:
        - Shopping Basket
      summary: Create Basket
      description: Create a new shopping basket
      requestBody:
        description: User ID for connection between user-object and basket-object
        required: false
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - apiKey: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingBasket'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '403':
          description: User not found
        '406':
          description: User not authorized
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot
  /basket/{basketId}/{itemId}:
    post:
      tags:
        - Shopping Basket
      summary: Add item to basket
      description: Adds an item (identified by the itemID) to the given basket (identified by the basket ID)
      parameters:
        - name: basketId
          in: path
          description: ID of shoppingbasket
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: ID of item
          required: true
          schema:
            type: string
      requestBody:
        description: The quantity of the item, you want to add to your basket
        required: true
        content:
          application/json:
              schema:
                type: integer
                example: 5
      security:
        - apiKey: []
      responses:
        '200':
          description: Successful operation, returns the entire shoppingbasket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllItems'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '403':
          description: Basket not found
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot
        '498':
          description: Amount not in stock
    delete:
      tags:
        - Shopping Basket
      summary: Remove item from basket
      description: Removes an item from the basket, and returns the remaining basket
      parameters:
        - name: basketId
          in: path
          description: ID of shoppingbasket
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: ID of item
          required: true
          schema:
            type: string
      security:
        - apiKey: []
      responses:
        '200':
          description: Successful operation, returns the entire shoppingbasket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllItems'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '403':
          description: Basket not found
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot

components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    AllItems:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Item'
    Item:
      type: object
      properties:
        itemId:
          type: integer
          example: 1234
        stockLvlLocal:
          type: integer
          example: 5
        stockLvlSupplier:
          type: integer
          example: 5
        supplier:
          type: string
          example: 'Supplier A'
        photoUrl:
          type: string
          example: 'https://www.stockimage.com/pot'
        price:
          type: integer
          example: 17.95
        name:
          type: string
          example: 'Perfekt Pande'
        description:
          type: string
          example: 'Denne Pande består af en lækker jern-legering, der gør maden super sprød'
        qty:
          type: integer
          example: 5
    ShoppingBasket:
      type: object
      properties:
        basketId:
          type: string
          example: LKJHI78oyhLO/8hiulhi67g
    User:
      type: object
      properties:
        uid:
          type: string
          example: JKhlIUYo879pæjip98å0?IJP()/
