openapi: 3.0.3
info:
  title: Shopping Basket
  description: This is an awesome app for a shopping basket
  contact:
    email: kasja20@student.sdu.dk
  version: 1.0.0
servers:
  - url: https://api.inutilia-emptio.com/v1
tags:
  - name: Inventory

paths:
  /inventory:
    get:
      tags:
        - Inventory
      summary: Fetch inventory status
      description: Fetch a list of products and stock levels. Alternatively only fect stock levels for one product.
      parameters:
        - name: id
          in: query
          description: Get the product and stock level of the id requested
          required: false
          schema:
            type: integer
      security:
        - api_key: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllInventoryItems'
                      
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot
  /basket/create:
    post:
      tags:
        - Shopping Basket
      summary: Create Basket
      description: Create a new shopping basket
      requestBody:
        description: User ID for connection between user-object and basket-object
        required: false
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - api_key: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingBasket'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '403':
          description: User not found
        '406':
          description: User not authorized
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot
  /basket/{basketId}/{itemId}:
    post:
      tags:
        - Shopping Basket
      summary: Add item to basket
      description: Adds an item (identified by the itemID) to the given basket (identified by the basket ID)
      parameters:
        - name: basketId
          in: path
          description: ID of shoppingbasket
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: ID of item
          required: true
          schema:
            type: string
      requestBody:
        description: Item ID for the item to add to the basket, aswell as the quantity of the item.
        required: false
        content:
          application/json:
              schema:
                type: integer
                example: 5
      security:
        - api_key: []
      responses:
        '200':
          description: Successful operation, returns the entire shoppingbasket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBasketItems'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '403':
          description: Basket not found
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot
    delete:
      tags:
        - Shopping Basket
      summary: Remove item from basket
      description: Removes an item from the basket, and returns the remaining basket
      parameters:
        - name: basketId
          in: path
          description: ID of shoppingbasket
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: ID of item
          required: true
          schema:
            type: string
      security:
        - api_key: []
      responses:
        '200':
          description: Successful operation, returns the entire shoppingbasket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBasketItems'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - API Key not accepted
        '403':
          description: Basket not found
        '418':
          description: The server refuses to brew coffee because it is, permanently, a teapot

components:
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: query
  schemas:
    AllInventoryItems:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InventoryItem'
      example:
        - id: 1
          stock_lvl_local: 5
          stock_lvl_a: 0
          stock_lvl_b: 5
        - id: 2
          stock_lvl_local: 10
          stock_lvl_a: 3
          stock_lvl_b: 0
    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          example: 1234
        stock_lvl_local:
          type: integer
          example: 5
        stock_lvl_a:
          type: integer
          example: 5
        stock_lvl_b:
          type: integer
          example: 5
    AllBasketItems:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/BasketItem'
      example:
        - id: 1
          qty: 5
        - id: 2
          qty: 8
    BasketItem:
      type: object
      properties:
        id:
          type: integer
          example: 1234
        qty:
          type: integer
          example: 5
    ShoppingBasket:
      type: object
      properties:
        basketid:
          type: string
          example: LKJHI78oyhLO/8hiulhi67g
    User:
      type: object
      properties:
        uid:
          type: string
          example: JKhlIUYo879pæjip98å0?IJP()/
